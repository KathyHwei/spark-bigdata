# -*- coding: utf-8 -*-
"""test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KncgCQnT8eZaBlpHAeJgZeeIdvajti2T
"""

!apt-get update
!apt-get install openjdk-8-jdk-headless -qq >/dev/null
!wget -q http://archive.apache.org/dist/spark/spark-2.3.1/spark-2.3.1-bin-hadoop2.7.tgz
!tar xf spark-2.3.1-bin-hadoop2.7.tgz
!pip install -q findspark

import os
os.environ["JAVA_HOME"] = "/usr/lib/jvm/java-8-openjdk-amd64"
os.environ["SPARK_HOME"] = "/content/spark-2.3.1-bin-hadoop2.7"
!ls
import findspark
findspark.init()
import pyspark
from pyspark.sql import SparkSession
spark = SparkSession.builder.getOrCreate()
spark

from google.colab import files
 #uploading the files via google collab which is another 
 #way to upload files directly from computer
 # Upload the file 1000 Sales_Records.csv in google colab

mydata = files.upload()

# Upload the file in google colab
mydata=spark.read.format("csv").option("header","true").load("covid19 (1).csv")
# Upload the datafile in google colab ipython notebook and show the data file
mydata.show()

#a) Import pandas and show 50 rows
import pandas as pd
mydata3 =pd.read_csv(r'covid19 (1).csv')
mydata3.head(50)

#b)By using matplotlib, numpy and 
#seaborn libraries you will plot histogram of new cases, your chart
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

f,(axl)=plt.subplots(1,1,figsize=(20,10),sharey=True)
#changed the csv file title to remove the space in the front of the columns
sns.distplot(mydata3['New_cases'], kde=True,color='blue',hist=True,bins=40)

#histogram
plt.title('New cases',fontsize = 20)
plt.xlabel('New_cases',fontsize = 20)
plt.ylabel('Cumulative_cases',fontsize =20)

#c) You should use scientific python and sckit 
#learn packages for importing linear regression and 
#statistics models-with these packages you need to create 
#a prediction model for the new cases and the new deaths

from scipy import stats
from sklearn.linear_model import LinearRegression
linear_regression = stats.linregress(x=mydata3.New_cases,y=mydata3.New_deaths)
slope=linear_regression.slope
print(format(slope,'.6f'))
intercept = linear_regression.intercept
print(format(intercept,'.4f'))

printing=linear_regression.slope *(1000)+linear_regression.intercept
print(format(printing,'.4f'))

printing2=linear_regression.slope *(-1000)+linear_regression.intercept
print(format(printing,'.4f'))

#d) Create a linear regression line with the above data, 
#new cases versus new deaths.

f,(axl)=plt.subplots(1,1,figsize=(12,5),sharey=True)
#newcases =y cause its over new deaths
sns.regplot(x="New_deaths",y="New_cases",data=mydata3,scatter_kws={"color":"pink"},line_kws={"color":"red"})